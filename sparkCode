#Get current directory
System.getProperty("user.dir")

#Get the file
val lines = sc.textFile("file:///home/cliff/notes/Task-20/shakespeare-hamlet.txt")

#clean 
val clean_rdd = lines.flatMap(line => line.toLowerCase.split(' '))

#Remove empty space
val clean_rdd = lines.flatMap(line => line.toLowerCase.split("\\W+")).filter(word => word != "")

#Map to one so consolidate the keys 
val map_to_one = clean_rdd.map(word => (word,1))

#Finish 
val reduce_rdd = map_to_one.reduceByKey((v1,v2) => v1+v2 )
#val reduce_rdd = map_to_one.reduceByKey(_+_)

#Sort them by key 
val df_rdd = reduce_rdd.sortBy(_._1, true)

#To data frame
df_rdd.toDF("Word","Count").show()
#Save the data frame
val df = df_rdd.toDF("Word","Count").show()
#Split the file
val hamlet1 = hamlet.map(x=>x.split(" "))

#add up the size of all lines
hamlet.map(s => s.length).reduce((a,b)=> a +b)
